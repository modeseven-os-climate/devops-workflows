---
# SPDX-License-Identifier: Apache-2.0
# Copyright 2024 The Linux Foundation <matthew.watkins@linuxfoundation.org>

name: "🧪 Python Tests (Matrix)"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, edited, synchronize]
    branches:
      - "*"
      - "!update-devops-tooling"

jobs:
  ### EVALUATE TESTS REQUIRED ###

  evaluate:
    name: "Evaluate tests required"
    # Only run before PR is merged
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    outputs:
      pytest: ${{ steps.pytest.outputs.perform }}
      notebooks: ${{ steps.notebooks.outputs.perform }}
      versions: ${{ steps.determine.outputs.versions }}

    steps:
      - name: "Evaluate Python tests"
        id: pytest
        run: |
          RESULT1=(**/test_*.py)
          RESULT2=(**/*_test.py)
          if [ -z "${RESULT1[0]}" ] || [ -z "${RESULT2[0]}" ]; then
            echo "Found Python tests to perform"
            echo "perform=true" >> "$GITHUB_OUTPUT"
          fi

      - name: "🗒️ Evaluate Notebook tests"
        id: notebooks
        run: |
          RESULT=(**/test_*.ipynb)
          if [ -z "${RESULT[0]}" ]; then
            echo "Found Jupyter Notebook tests"
            echo "proceed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: "Determine Python matrix versions"
        id: determine
        # yamllint disable-line rule:line-length
        uses: os-climate/devops-reusable-workflows/.github/workflows/pyproject-toml-fetch-matrix.yaml@main

  ### PERFORM TESTS ###

  pytest:
    name: "Perform Python tests"
    runs-on: ubuntu-latest
    needs: [evaluate]
    if: needs.evaluate.outputs.pytest == 'true'
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.evaluate.outputs.versions) }}

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Setup Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Setup PDM for build commands"
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pdm export -o requirements.txt
          pip install -r requirements.txt
          pip install --upgrade pytest pytest-cov
          pip install .

      - name: "Run unit tests: pytest"
        run: |
          if [ -d test ]; then
            python -m pytest test
          elif [ -d tests ]; then
            python -m pytest tests
          else
            echo "No test/tests directory could be found"
            echo "Aborting testing without error"; exit 0
          fi

  notebooks:
    name: "Test Jupyter Notebooks"
    needs: [evaluate]
    runs-on: ubuntu-latest
    if: needs.evaluate.outputs.notebooks == 'true'
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.evaluate.outputs.versions) }}

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Setup PDM for build commands"
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install dependencies"
        run: |
          which python; which python3
          python --version; python3 --version
          python -m pip install --upgrade pip
          pdm export -o requirements.txt
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install .
          pip install pytest nbmake

      - name: "Testing Jupyter Notebooks"
        run: |
          echo "Testing notebooks using: pytest --nbmake -- **/test_*.ipynb"
          pytest --nbmake -- **/test_*.ipynb

      - name: Upload logs as artefacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-logs
          path: /tmp/*.log
          retention-days: 14
